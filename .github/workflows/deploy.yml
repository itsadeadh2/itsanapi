name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

env:
  service_name: itsanapi

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          coverage run -m unittest discover -s src/tests -v
          coverage report

      - name: Unit Tests
        run: |
          python -m venv venv
          source venv/bin/activate
          coverage run -m unittest discover -s src/tests/unit -v
          coverage report

      - name: Integration Tests
        run: |
          python -m venv venv
          source venv/bin/activate
          coverage run -m unittest discover -s src/tests/integration -v
          coverage report

      - name: Run lint
        run: |
          source venv/bin/activate
          flake8

  deploy-infra:
    name: Deploy infra
    runs-on: ubuntu-latest
    environment: production
    needs: [test]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Deploy ELB
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.service_name }}-elb
          template: cloudformation/elb.yml
          no-fail-on-empty-changeset: 1

      - name: Deploy ECR
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.service_name }}-ecr
          template: cloudformation/ecr.yml
          no-fail-on-empty-changeset: 1

      - name: Deploy RDS
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.service_name }}-db
          template: cloudformation/rds.yml
          parameter-overrides: "DbUserName=${{ secrets.DB_USERNAME }},DbPassword=${{ secrets.DB_PASSWORD }}"
          no-fail-on-empty-changeset: 1

  push-image:
    name: Push image to ECR
    runs-on: ubuntu-latest
    environment: production
    needs: [deploy-infra, test]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: ${{ secrets.AWS_ACCOUNT_ID }}
          mask-password: "true"

      - name: Build, tag, and push image to Amazon ECR
        id: build-publish
        shell: bash
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.service_name }}-ecr
          IMAGE_TAG: ${{ github.run_id }}
        run: |
          docker build -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" .
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "IMAGE $IMAGE_TAG is pushed to $ECR_REGISTRY/$ECR_REPOSITORY"
          echo "image_tag=$IMAGE_TAG" 
          echo "full_image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"


  deploy-service:
    name: Deploy service
    runs-on: ubuntu-latest
    environment: production
    needs: [push-image, test]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Deploy ECS
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.service_name }}-ecs
          template: cloudformation/ecs.yml
          parameter-overrides: "Revision=${{ github.run_id }},GoogleClientId=${{ secrets.GOOGLE_CLIENT_ID  }},GoogleClientSecret=${{ secrets.GOOGLE_CLIENT_SECRET  }},FrontendCallbackURL=${{ secrets.FRONTEND_CALLBACK_URL }},DbUserName=${{ secrets.DB_USERNAME }},DbPassword=${{ secrets.DB_PASSWORD }}"
          no-fail-on-empty-changeset: 1